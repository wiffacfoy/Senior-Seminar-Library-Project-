<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>